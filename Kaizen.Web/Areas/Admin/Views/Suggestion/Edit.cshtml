@model Kaizen.Web.Models.SuggestionViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Düzenle</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Subject, (ViewBag.CurrentEmployeeId == ViewBag.AuthorEmployeeId) ? new { htmlAttributes = (object)new { @class = "form-control" } } : new { htmlAttributes = (object)new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentStatus, (ViewBag.CurrentEmployeeId == ViewBag.AuthorEmployeeId) ? new { htmlAttributes = (object)new { @class = "form-control", style = "resize:none; height: 100px; " } } : new { htmlAttributes = (object)new { @class = "form-control", @readonly = "readonly", style = "resize:none; height: 100px; " } })
            @Html.ValidationMessageFor(model => model.CurrentStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SuggestedStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SuggestedStatus, (ViewBag.CurrentEmployeeId == ViewBag.AuthorEmployeeId) ? new { htmlAttributes = (object)new { @class = "form-control", style = "resize:none; height: 100px; " } } : new { htmlAttributes = (object)new { @class = "form-control", @readonly = "readonly", style = "resize:none; height: 100px; " } })
            @Html.ValidationMessageFor(model => model.SuggestedStatus, "", new { @class = "text-danger" })
        </div>
    </div>
    @{
        if (ViewBag.CurrentUserRole == "Developer")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Assessment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Assessment, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Assessment, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Assessment)
        }
    }


    <div class="form-group">

        @{
            if (ViewBag.CurrentUserRole == "Developer" || ViewBag.CurrentEmployeeId == ViewBag.AuthorEmployeeId)
            {
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-default">Save</button>
                </div>
            }
            else
            {
                <div class="col-md-offset-2 col-md-10 invisible">
                    <button type="submit" class="btn btn-default">Save</button>
                </div>

            }
        }

    </div>
</div>
}

<div>
    @Html.ActionLink("Listeye Geri Dön", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
